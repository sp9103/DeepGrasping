name: "MNIST_TNet"
layer {
  name: "data"
  type: "MNISTData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  mnist_data_param {
    batch_size: 80
    data_path : "MNIST DATA/train-images.idx3-ubyte"
    label_path : "MNIST DATA/train-labels.idx1-ubyte"
  }
}
layer {
  name: "data"
  type: "MNISTData"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  mnist_data_param {
    batch_size: 100
    data_path : "MNIST DATA/t10k-images.idx3-ubyte"
    label_path : "MNIST DATA/t10k-labels.idx1-ubyte"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
    #decay_mult: 0
  }
  param {
    lr_mult: 2
    #lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 5
    stride: 1
    #visualize: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    #visualize: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "conv2"
  top: "fc1"
  param {
    lr_mult: 1
    #decay_mult: 1
    decay_mult: 0
  }
  param {
    #lr_mult: 2
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "fc1"
  top: "fc2"
  param {
    lr_mult: 1
    #decay_mult: 1
    decay_mult: 0
  }
  param {
    #lr_mult: 2
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc2"
  bottom: "label"
  top: "loss"
}
