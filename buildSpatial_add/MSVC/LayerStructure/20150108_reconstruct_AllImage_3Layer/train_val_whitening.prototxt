name: "Unsupervised_TNet"
layer {
  name: "data"
  type: "SPUnsupervisedData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  sp_unsupervised_data_param {
    batch_size: 50
    channels: 3
    height : 80
    width : 80
    data_path : "E:/ImageData/Whitening"
    label_path : "E:/ImageData/Whitening_label"

    #data_limit : 5000
  }
}
layer {
  name: "data"
  type: "SPUnsupervisedData"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  sp_unsupervised_data_param {
    batch_size: 1
    channels: 3
    height : 80
    width : 80
    data_path : "E:/ImageData/Whitening"
    label_path : "E:/ImageData/Whitening_label"

    data_limit : 1
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
    #decay_mult: 0
  }
  param {
    lr_mult: 2
    #lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 7
    stride: 2
    #visualize: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "ReLU"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 5
    #visualize: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 5
    #visualize: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "conv3"
  top: "fc1"
  param {
    lr_mult: 1
    #decay_mult: 1
    decay_mult: 0
  }
  param {
    #lr_mult: 2
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1600
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "EuclideanLoss"
  type: "EuclideanLoss"
  bottom: "fc1"
  bottom: "label"
  top: "l2_error"
  loss_weight: 1
}
#layer {
#  name: "SigmoidCrossEntropyLoss"
#  type: "SigmoidCrossEntropyLoss"
#  bottom: "fc1"
#  bottom: "label"
#  top: "cross_entropy_loss"
#  loss_weight: 1
#}